plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'team4'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Mybatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot Starter Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Oracle
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Validaiton
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

	// AWS SDK
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.660'

	// (임시) 로컬 개발 Oracle JDBC
	runtimeOnly files('libs/ojdbc17.jar') // libs 폴더에 jar 넣고 로컬로 참조

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	archiveFileName = 'app.jar'
}

