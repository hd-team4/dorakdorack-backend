<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dorakdorak.domain.order.mapper.OrderMapper">

    <select id="findNormalOrdersByMemberId" resultType="dorakdorak.domain.order.dto.response.MyOrderResponseDto">
        SELECT
            ID AS ORDER_ID,
            ORDER_CODE,
            CREATED_AT AS ORDER_DATE
        FROM ORDERS
        WHERE MEMBER_ID = #{memberId}
            AND IS_GONGGOO = 'NORMAL'
        ORDER BY CREATED_AT DESC
    </select>

    <select id="findNormalOrdersPreviewByMemberId" resultType="dorakdorak.domain.order.dto.response.MyOrderPreviewResponseDto">
        SELECT
            NAME,
            IMAGE_URL,
            PRICE,
            AMOUNT,
            ORDER_DATE
        FROM (
            SELECT
                OI.NAME AS NAME,
                OI.IMAGE_URL AS IMAGE_URL,
                OI.PRICE AS PRICE,
                COUNT(*) AS AMOUNT,
                MAX(OI.CREATED_AT) AS ORDER_DATE,
                OI.ORDER_STATUS AS ORDER_STATUS
            FROM ORDER_ITEMS OI
                JOIN ORDERS O ON OI.ORDER_ID = O.ID
            WHERE O.MEMBER_ID = #{memberId}
                AND O.IS_GONGGOO = 'NORMAL'
            GROUP BY OI.NAME, OI.IMAGE_URL, OI.PRICE, OI.ORDER_STATUS
            ORDER BY ORDER_DATE DESC
        )
        WHERE ROWNUM &lt;= 3
    </select>

    <select id="findGroupOrdersByMemberId" resultType="dorakdorak.domain.order.dto.response.MyOrderResponseDto">
        SELECT
            ID AS ORDER_ID,
            ORDER_CODE,
            CREATED_AT AS ORDER_DATE
        FROM ORDERS
        WHERE MEMBER_ID = #{memberId}
        AND IS_GONGGOO = 'GONGGOO'
    </select>

    <select id="findGroupOrdersPreviewByMemberId" resultType="dorakdorak.domain.order.dto.response.MyOrderPreviewResponseDto">
        SELECT
            NAME,
            IMAGE_URL,
            PRICE,
            AMOUNT,
            ORDER_DATE,
            ORDER_STATUS
        FROM (
            SELECT
                OI.NAME AS NAME,
                OI.IMAGE_URL AS IMAGE_URL,
                OI.PRICE AS PRICE,
                COUNT(*) AS AMOUNT,
                MAX(OI.CREATED_AT) AS ORDER_DATE,
                OI.ORDER_STATUS AS ORDER_STATUS
            FROM ORDER_ITEMS OI
                JOIN ORDERS O ON OI.ORDER_ID = O.ID
            WHERE O.MEMBER_ID = #{memberId}
                AND O.IS_GONGGOO = 'GONGGOO'
            GROUP BY OI.NAME, OI.IMAGE_URL, OI.PRICE, OI.ORDER_STATUS
            ORDER BY ORDER_DATE DESC
        )
        WHERE ROWNUM &lt;= 3
    </select>

    <select id="findItemsByOrderId" resultType="dorakdorak.domain.order.dto.response.MyOrderItemResponseDto">
        SELECT
            NAME,
            IMAGE_URL,
            PRICE,
            COUNT(*) AS AMOUNT,
            ORDER_STATUS
        FROM ORDER_ITEMS
        WHERE ORDER_ID = #{orderId}
        GROUP BY NAME, IMAGE_URL, PRICE, ORDER_STATUS
        ORDER BY MAX(CREATED_AT) DESC
    </select>

    <select id="countNormalOrdersByMemberId" resultType="dorakdorak.domain.order.dto.response.MyOrderAmountResponseDto">
        SELECT COUNT(*) AS ORDER_AMOUNT
        FROM ORDERS
        WHERE MEMBER_ID = #{memberId}
            AND IS_GONGGOO = 'NORMAL'
    </select>

    <select id="countGroupOrdersByMemberId" resultType="dorakdorak.domain.order.dto.response.MyOrderAmountResponseDto">
        SELECT COUNT(*) AS ORDER_AMOUNT
        FROM ORDERS
        WHERE MEMBER_ID = #{memberId}
            AND IS_GONGGOO = 'GONGGOO'
    </select>

    <select id="getNextOrderId" resultType="long">
        SELECT SEQ_ORDERS.NEXTVAL FROM DUAL
    </select>

    <insert id="insertOrder" parameterType="dorakdorak.domain.order.dto.OrderDto">
        INSERT INTO ORDERS (ID, MEMBER_ID, MERCHANT_ORDER_ID, ORDER_CODE, ORDER_STATUS, PRICE, IS_GONGGOO, ARRIVAL_AT, CREATED_AT, CREATED_BY)
        VALUES (#{id}, #{memberId}, #{merchantOrderId}, #{orderCode}, #{orderStatus}, #{price}, #{isGonggoo}, #{arrivalAt}, SYSTIMESTAMP, #{memberId})
    </insert>

    <insert id="insertOrderItem" parameterType="dorakdorak.domain.order.dto.OrderItemDto">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT SEQ_ORDER_ITEMS.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO ORDER_ITEMS (ID, ORDER_ID, DOSIRAK_ID, NAME, CATEGORY, PRICE, IMAGE_URL, ORDER_STATUS, CREATED_AT, CREATED_BY)
        VALUES (#{id}, #{orderId}, #{dosirakId}, #{name}, #{category}, #{price}, #{imageUrl}, #{orderStatus}, SYSTIMESTAMP, #{createdBy})
    </insert>

</mapper>