name: CI/CD using GitHub Actions & Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Set JAR name
        run: echo "JAR_NAME=build/libs/app.jar" >> $GITHUB_ENV

      - name: Docker build & push to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build \
            -t ${{ secrets.DOCKER_USERNAME }}/docker-test:latest \
            --build-arg JAR_FILE=${{ env.JAR_NAME }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-test:latest

      - name: Docker image pull & deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-test:latest
            sudo docker stop docker-test || true
            sudo docker rm docker-test || true
            sudo docker run -d --name docker-test -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/docker-test:latest
            sudo docker image prune -a -f
